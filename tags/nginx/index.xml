<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nginx on 幸福和富有的过一生</title><link>/tags/nginx/</link><description>Recent content in Nginx on 幸福和富有的过一生</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 23 Sep 2022 14:01:33 +0800</lastBuildDate><atom:link href="/tags/nginx/index.xml" rel="self" type="application/rss+xml"/><item><title>负载均衡获得真实源IP的6种方法</title><link>/post/lb-real-ip/</link><pubDate>Fri, 23 Sep 2022 14:01:33 +0800</pubDate><guid>/post/lb-real-ip/</guid><description>使用负载均衡后，获取真实源IP方法汇总, 本文转载负载均衡获得真实源IP的6种方法 当数据包从负载均衡器往后端转发时候，真实源IP可在L3、L4</description></item><item><title>APISIX的控制面</title><link>/post/apisix-admin/</link><pubDate>Tue, 12 Apr 2022 08:46:36 +0800</pubDate><guid>/post/apisix-admin/</guid><description>apisix的控制面主要是提供一套RESTful API接口对存储在etcd中的route、service、plugin、upstream等C</description></item><item><title>Nginx的锁机制</title><link>/post/nginx-lock/</link><pubDate>Wed, 06 Apr 2022 19:23:06 +0800</pubDate><guid>/post/nginx-lock/</guid><description>我们项目中nginx的dyups模块在大量更新时，有性能瓶颈，经排查发现时用的自旋锁导致性能瓶颈，dyups使用ngx_shmtx_lock</description></item><item><title>APISIX源码分析-请求处理流程</title><link>/post/apisix-request-processing/</link><pubDate>Tue, 05 Apr 2022 10:33:34 +0800</pubDate><guid>/post/apisix-request-processing/</guid><description>APISIX的请求处理流程跟Nginx处理请求的各个阶段是一致的，只是APISIX在各个阶段嵌入自己详细处理请求的逻辑。 init_worke</description></item><item><title>APISIX源码-启动过程</title><link>/post/apisix-start/</link><pubDate>Sun, 03 Apr 2022 16:17:51 +0800</pubDate><guid>/post/apisix-start/</guid><description>apisix启动命令 APISIX安装 之后，开始启动APISIX，APISIX写一套启动命令工具。 执行apisix help可以查看命令详细信息</description></item><item><title>APISIX快速入门</title><link>/post/apisix-quick-start/</link><pubDate>Sat, 12 Mar 2022 20:26:56 +0800</pubDate><guid>/post/apisix-quick-start/</guid><description>前面介绍过APISIX ，github开源社区比较活跃的云原生API网关， 自己根据官方的快速入门指南 学习使用APISIX。 安装部署 安装部署AP</description></item><item><title>nginx源码分析-模块化架构</title><link>/post/ngx-module-arch/</link><pubDate>Tue, 01 Mar 2022 18:34:14 +0800</pubDate><guid>/post/ngx-module-arch/</guid><description>从源码角度分析一下nginx的模块化设计架构，主要通过nginx-1.15.8源码以及陶辉写的《深入理解Nginx模块开发与架构解析》进行分</description></item><item><title>OpenResty中的lua协程</title><link>/post/ngx_lua/</link><pubDate>Sat, 26 Feb 2022 19:23:24 +0800</pubDate><guid>/post/ngx_lua/</guid><description>OpenResty 是一个基于nginx与Lua的高性能Web平台，其内部集成了大量精良的Lua库、第三方模块以及大多数的依赖项。 用于方便地搭建能够处理超高并</description></item><item><title>nginx epoll惊群</title><link>/post/ngx-epoll/</link><pubDate>Sat, 26 Feb 2022 08:23:43 +0800</pubDate><guid>/post/ngx-epoll/</guid><description>nginx是目前比较流行的高性能的负载均衡，反向代理，静态web服务器，它的高性能主要是基于epoll(Linux)的事件框架。 nginx是</description></item></channel></rss>